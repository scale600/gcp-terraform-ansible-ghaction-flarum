---
# Ansible Playbook for Flarum Installation on Ubuntu 22.04 LTS
# Optimized for GCP Free Tier e2-micro with 2GB swap

- name: Deploy Flarum on Ubuntu 22.04
  hosts: all
  become: yes
  gather_facts: no
  vars:
    php_version: "8.1"
    flarum_home: "/var/www/flarum"
    db_host: "{{ hostvars['localhost']['db_host'] | default('localhost') }}"
    db_name: "{{ hostvars['localhost']['db_name'] | default('flarum') }}"
    db_user: "{{ hostvars['localhost']['db_user'] | default('flarum') }}"
    db_password: "{{ hostvars['localhost']['db_password'] | default('') }}"

  tasks:
    - name: Wait for system to become reachable
      wait_for_connection:
        timeout: 180
        delay: 5
      retries: 3
      delay: 10
      register: connection_result
      until: connection_result is success
    
    - name: Gather facts
      setup:
    
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      retries: 3
      delay: 5

    - name: Upgrade all packages
      apt:
        upgrade: safe
      retries: 2
      delay: 10

    - name: Install required packages
      apt:
        name:
          - nginx
          - php{{ php_version }}
          - php{{ php_version }}-fpm
          - php{{ php_version }}-mysql
          - php{{ php_version }}-gd
          - php{{ php_version }}-mbstring
          - php{{ php_version }}-xml
          - php{{ php_version }}-zip
          - php{{ php_version }}-curl
          - php{{ php_version }}-opcache
          - php{{ php_version }}-intl
          - php{{ php_version }}-bcmath
          - php{{ php_version }}-tokenizer
          - php{{ php_version }}-dom
          - composer
          - git
          - unzip
          - wget
          - curl
          - mysql-server
        state: present
      retries: 3
      delay: 5

    - name: Create optimized swap file for e2-micro stability
      block:
        - name: Check if swap already exists
          stat:
            path: /swapfile
          register: swap_file

        - name: Create swap file (2GB for e2-micro)
          command: fallocate -l 2G /swapfile
          when: not swap_file.stat.exists

        - name: Set swap file permissions
          file:
            path: /swapfile
            mode: "0600"
            owner: root
            group: root
          when: not swap_file.stat.exists

        - name: Set up swap file
          command: mkswap /swapfile
          when: not swap_file.stat.exists

        - name: Enable swap file
          command: swapon /swapfile
          when: not swap_file.stat.exists
          ignore_errors: yes

        - name: Add swap to fstab for persistence
          lineinfile:
            path: /etc/fstab
            line: "/swapfile none swap sw 0 0"
            state: present

    - name: Optimize swap settings for e2-micro
      block:
        - name: Set swappiness to 10
          sysctl:
            name: vm.swappiness
            value: "10"
            state: present
            reload: yes

        - name: Set vfs_cache_pressure to 50
          sysctl:
            name: vm.vfs_cache_pressure
            value: "50"
            state: present
            reload: yes

    - name: Start and enable MySQL
      systemd:
        name: mysql
        state: started
        enabled: yes

    - name: Create Flarum database
      mysql_db:
        name: "{{ db_name }}"
        state: present
        encoding: utf8mb4
        collation: utf8mb4_unicode_ci
      become: yes
      become_user: root

    - name: Create Flarum database user
      mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        priv: "{{ db_name }}.*:ALL"
        host: "localhost"
        state: present
      become: yes
      become_user: root
      no_log: true

    - name: Create flarum directory
      file:
        path: "{{ flarum_home }}"
        state: directory
        owner: www-data
        group: www-data
        mode: "0755"

    - name: Install Flarum using Composer
      composer:
        command: create-project
        arguments: flarum/flarum . --stability=beta
        working_dir: "{{ flarum_home }}"
      become_user: www-data
      environment:
        COMPOSER_ALLOW_SUPERUSER: "1"

    - name: Configure Nginx for Flarum
      copy:
        content: |
          server {
              listen 80;
              listen [::]:80;
              server_name _;
              root {{ flarum_home }}/public;
              index index.php index.html;

              location / {
                  try_files $uri $uri/ /index.php?$query_string;
              }

              location ~ \.php$ {
                  fastcgi_pass unix:/run/php/php{{ php_version }}-fpm.sock;
                  fastcgi_index index.php;
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                  include fastcgi_params;
              }

              location ~ /\.ht {
                  deny all;
              }

              location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                  expires max;
                  log_not_found off;
              }
          }
        dest: /etc/nginx/sites-available/flarum
        mode: "0644"

    - name: Enable Flarum Nginx site
      file:
        src: /etc/nginx/sites-available/flarum
        dest: /etc/nginx/sites-enabled/flarum
        state: link

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test
      changed_when: false

    - name: Set proper permissions for Flarum
      file:
        path: "{{ flarum_home }}"
        recurse: yes
        owner: www-data
        group: www-data
        mode: "0755"

    - name: Set storage directory permissions
      file:
        path: "{{ flarum_home }}/storage"
        recurse: yes
        owner: www-data
        group: www-data
        mode: "0775"
      ignore_errors: yes

    - name: Restart services
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      loop:
        - nginx
        - php{{ php_version }}-fpm

    - name: Display completion message
      debug:
        msg: |
          ========================================
          Flarum installation complete!
          
          Access your forum at: http://{{ ansible_default_ipv4.address }}
          
          Complete the setup wizard in your browser:
          - Database Host: localhost
          - Database Name: {{ db_name }}
          - Database User: {{ db_user }}
          - Database Password: (the one you provided)
          ========================================
